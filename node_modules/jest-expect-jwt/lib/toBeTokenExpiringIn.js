"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
const ms_1 = __importDefault(require("ms"));
function toBeTokenExpiringIn(received, expectedExpiry) {
    if (typeof received !== "string") {
        return {
            pass: false,
            message: () => `Received a ${this.utils.printExpected("string")} token but found a ${this.utils.printReceived(typeof received)}`
        };
    }
    const decoded = jsonwebtoken_1.default.decode(received);
    if (decoded === null) {
        return {
            pass: false,
            message: () => `Was unable to decode the token received: ${this.utils.printReceived(received)}`
        };
    }
    if (typeof decoded === "string") {
        return {
            pass: false,
            message: () => `Decoded token was a a ${this.utils.printReceived("string")} token but found a ${this.utils.printExpected("object")}`
        };
    }
    const { exp } = decoded;
    const expiringTime = Math.floor((Date.now() + ms_1.default(expectedExpiry)) / 1000);
    const pass = exp === expiringTime || exp === expiringTime - 1;
    return {
        pass,
        message: () => `Expected: ${this.utils.printExpected(expiringTime)}
Received (decoded): ${this.utils.printReceived(exp)}`
    };
}
exports.default = toBeTokenExpiringIn;
//# sourceMappingURL=toBeTokenExpiringIn.js.map